---
- name: Deploy Gitea, Runner, and Certbot
  hosts: nas
  become: true
  vars_files:
    - vars/main.yml

  roles:
    - role: tafeen.synology.syno_pkg_install
      syno_pkg_name: "Container Manager"
      syno_pkg_state: present
      tags: docker
  tasks:
    - name: Validate required variables
      assert:
        that:
          - lookup('vars', item) is defined
          - lookup('vars', item) | string != ""
        fail_msg: "The required variable '{{ item }}' is undefined or is empty."
      loop:
        - certbot_email
        - discord_webhook
        - dnsimple_endpoint
        - dnsimple_oauth_token
        - gitea_admin_username
        - gitea_admin_password
        - gitea_admin_email
        - gitea_db_password

    - name: Install Python3
      include_role:
        name: tafeen.synology.syno_pkg_install
      vars:
        syno_pkg_name: "Python3"
        syno_pkg_state: present

    - name: Install pip
      command: python3 -m ensurepip --upgrade
      args:
        creates: /usr/bin/pip3

    - name: Include certbot role
      include_role:
        name: certbot

    - name: Include gitea_server role
      include_role:
        name: gitea_server

    - name: Detect if running in Gitea
      set_fact:
        in_gitea: "{{ lookup('ansible.builtin.env', 'GITEA_INSTANCE_URL') != '' }}"

    # only install the Gitea runner if bootstrapping the server from GitHub
    - name: Include gitea_runner role
      include_role:
        name: gitea_runner
      when: not in_gitea

    - name: Configure Gitea Backups
      # NOTE: This is a static import, not an include.
      # It runs before the playbook starts regardless of the order
      # TODO: Refactor to either an include_role or move this to the roles section to prevent confusion.
      import_role:
        name: gitea_backup
      become: true
      vars:
        # Backup configuration variables
        b2_bucket_name: "{{ lookup('ansible.builtin.env', 'B2_BUCKET_NAME') }}"
        b2_application_key_id: "{{ lookup('ansible.builtin.env', 'B2_APPLICATION_KEY_ID') }}"
        b2_application_key: "{{ lookup('ansible.builtin.env', 'B2_APPLICATION_KEY') }}"
      tags:
        - backup_config
